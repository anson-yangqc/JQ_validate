let top = document.documentElement.scrollTop || document.body.scrollTop || window.pageYOffset

var isAndroid = u.indexOf(‘Android’) > -1 || u.indexOf(‘Adr’) > -1; //android终端
var isiOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端

<p>点击按钮将文档窗口在水平和垂直方向各滚动 100px 。</p>
const pageYOffset = window.pageYOffset
 window.scrollBy(0, -pageYOffset)
window.scrollBy(100, 100);// 100是累积的，不是滚到指定
window.scrollTo(100,100)


//功能：实现滚动过程 50相对于滚动的速度 start
scrollIng(x, y) {
      // window.scrollTo(x, y)
      var diff = 200 //每次滚动的距离
      if (y === 0) {
        y = -this.pageYOffset
        diff = -200 //每次滚动的距离
      } else {
        y = y - this.pageYOffset
      }
      var total = Math.abs(parseInt(y / diff))
      var yu = y % diff
      var time = 0
      function step() {
        time++
        if (time === total + 1) {
          window.scrollBy(0, yu)
        } else {
          window.scrollBy(0, diff)
          window.requestAnimationFrame(step)
        }
      }
      window.requestAnimationFrame(step)
    }


```
监听div使用pc/手机
document.querySelector('.contentWrap').scrollHeight //div总高
document.querySelector('.contentWrap').scrollTop //div滚动了多少
document.querySelector('.contentWrap').clientHeight //div窗口高度

监听window 适用移动
例子1
const scrollIsToTop =document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop // window滚动了多少
//document.documentElement.clientHeight //window窗口高度 document.body.clientHeight《=》（这个会取到内容总高）
//document.body.scrollHeight //window内容总高度
const CONDITION = document.body.clientHeight + scrollIsToTop + 20 >= document.body.scrollHeight
if (CONDITION) {binding.value()}
例子2
handleScroll (event) {
event.preventDefault()
const scrollIsToTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop // window滚动了多少
const scrollHeight =  document.documentElement.clientHeight || document.body.scrollHeight //window窗口高度
if (        scrollIsToTop + scrollHeight + 20 >=        document.body.scrollHeight - 50      ) {        this.loadmore()      }    
}
```
